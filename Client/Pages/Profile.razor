@page "/profile/{email}"
@using SupportSystemCofe.Shared.Models
@inject HttpClient HttpClient

<div class="profile-page">
    <link href="css/Profile.css" rel="stylesheet" />
    <div class="profile-header">
        <h1>Профиль</h1>
        <p>Информация о вашей компании и её текущем состоянии.</p>
    </div>

    @if (isLoading)
    {
        <p>Загрузка данных...</p>
    }
    else if (!string.IsNullOrEmpty(errorMessage))
    {
        <p class="error-message">@errorMessage</p>
    }
    else if (profileData != null)
    {
        <div class="profile-card">
            <div class="profile-info">
                <h2>Контактные данные</h2>
                <p><strong>ФИО:</strong> @profileData.FullName</p>
                <p><strong>Компания:</strong> @profileData.BusinessName</p>
                <p><strong>Сфера деятельности:</strong> @profileData.Industry</p>
                <p><strong>Этап бизнеса:</strong> @profileData.Scale</p>
                <p><strong>Регион:</strong> @profileData.Region</p>
            </div>
        </div>
    }
</div>

@code {
    [Parameter]
    public string Email { get; set; }

    private RegistrationRequest profileData;
    private bool isLoading = true;
    private string errorMessage;

    protected override async Task OnParametersSetAsync()
    {
        try
        {
            // Загружаем данные профиля
            profileData = await HttpClient.GetFromJsonAsync<RegistrationRequest>($"https://localhost:7120/api/profile/{Email}");
        }
        catch (HttpRequestException ex)
        {
            errorMessage = "Ошибка при загрузке данных профиля.";
            Console.WriteLine($"Ошибка: {ex.Message}");
        }
        finally
        {
            isLoading = false;
        }
    }
}
