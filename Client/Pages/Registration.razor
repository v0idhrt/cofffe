@page "/registration"
@using SupportSystemCofe.Shared.Models
@inject NavigationManager NavigationManager

<div class="registration-page">
    <link href="css/Registration.css" rel="stylesheet" />

    <!-- Заголовок страницы -->
    <div class="registration-header">
        <h1>Регистрация</h1>
    </div>

    <!-- Форма регистрации -->
    <div class="registration-form">
        <EditForm Model="@registrationRequest" OnValidSubmit="HandleValidSubmit">
            <DataAnnotationsValidator />
            <ValidationSummary />

            <h2>Контактные данные</h2>
            <div class="form-group">
                <label for="fullName">ФИО</label>
                <InputText id="fullName" @bind-Value="registrationRequest.FullName" class="form-control" />
            </div>
            <div class="form-group">
                <label for="email">Email</label>
                <InputText id="email" @bind-Value="registrationRequest.Email" type="email" class="form-control" />
            </div>
            <div class="form-group">
                <label for="phone">Номер телефона</label>
                <InputText id="phone" @bind-Value="registrationRequest.Phone" type="tel" class="form-control" />
            </div>
            <div class="form-group">
                <label for="password">Пароль</label>
                <InputText id="password" @bind-Value="registrationRequest.Password" type="password" class="form-control" />
            </div>

            <h2>Регистрация бизнеса</h2>
            <div class="form-group">
                <label for="businessName">Название бизнеса</label>
                <InputText id="businessName" @bind-Value="registrationRequest.BusinessName" class="form-control" />
            </div>
            <div class="form-group">
                <label for="industry">Сфера деятельности</label>
                <InputSelect id="industry" @bind-Value="registrationRequest.Industry" class="form-control">
                    <option value="IT">IT</option>
                    <option value="Retail">Розничная торговля</option>
                    <option value="Food">Общепит</option>
                </InputSelect>
            </div>
            <div class="form-group">
                <label for="region">Регион</label>
                <InputSelect id="region" @bind-Value="registrationRequest.Region" class="form-control">
                    <option value="Region1">Регион 1</option>
                    <option value="Region2">Регион 2</option>
                </InputSelect>
            </div>
            <div class="form-group">
                <label for="scale">Масштаб бизнеса</label>
                <InputSelect id="scale" @bind-Value="registrationRequest.Scale" class="form-control">
                    <option value="Small">Малый</option>
                    <option value="Medium">Средний</option>
                    <option value="Large">Крупный</option>
                </InputSelect>
            </div>
            <div class="form-group">
                <label for="details">Дополнительные детали</label>
                <InputTextArea id="details" @bind-Value="registrationRequest.Details" class="form-control" />
            </div>

            <button type="submit" class="btn btn-success">Зарегистрироваться</button>
        </EditForm>
    </div>
</div>

@code {
    private RegistrationRequest registrationRequest = new RegistrationRequest();
    private async Task HandleValidSubmit()
    {
        // Отправка данных на сервер (если используется API)
        var isSuccessful = await SubmitRegistration();

        if (isSuccessful)
        {
            Console.WriteLine("Данные успешно отправлены!");
            NavigationManager.NavigateTo("/login");
        }
        else
        {
            Console.WriteLine("Ошибка при обработке данных.");
        }
    }

    // Метод для отправки данных на сервер
    private async Task<bool> SubmitRegistration()
    {
        try
        {
            // Здесь отправьте данные на сервер через HttpClient
            // Пример:
            // var response = await Http.PostAsJsonAsync("api/registration", registrationRequest);
            // return response.IsSuccessStatusCode;

            // Временный пример без API
            await Task.Delay(1000); // Эмуляция запроса
            return true; // Предположим, что данные успешно обработаны
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Ошибка: {ex.Message}");
            return false;
        }
    }
}
